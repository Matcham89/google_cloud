#VPC creation
resource "google_compute_network" "vpc_webapp" {
  name                              = var.vpc
  routing_mode                      = var.vpc_route_mode
  auto_create_subnetworks           = false
  mtu                               = 1460
  delete_default_routes_on_create   = false

}

#private subnet for k8s workers
resource "google_compute_subnetwork" "vpc_private" {
    name = var.subnet
    ip_cidr_range = "10.0.0.0/18" #16000 subnets
    region = var.region
    network = var.vpc
    private_ip_google_access = true

#k8s pods secondary range
    secondary_ip_range {
        range_name = "k8s-pod-range"
        ip_cidr_range = "10.48.0.0/14"
    }
#k8s service range     
    secondary_ip_range {
        range_name = "k8s-service-range"
        ip_cidr_range = "10.52.0.0/20"
    }
}


#!!!!!FIREWALL RULES!!!!!!!!

#allow ssh into vpc
resource "google_compute_firewall" "allow_ssh" {
    name = "allow-ssh"
    network = google_compute_network.vpc_webapp.name
    
    #ssh port definition
    allow {
        protocol = "tcp"
        ports = ["22"]
    }

    source_ranges = [ "0.0.0.0/0" ] 
}

#cloud router used with NAT allow vms without public IP addresses to access internet
resource "google_compute_router" "router01" {
  name = var.router
  region = var.region
  network = var.vpc

  depends_on = [
    google_compute_network.vpc_webapp
  ]
}

#NAT instructions for VPC router
resource "google_compute_router_nat" "nat" {
    name = "nat"
    router = var.router
    region  = var.region

    source_subnetwork_ip_ranges_to_nat = "LIST_OF_SUBNETWORKS"
    nat_ip_allocate_option = "MANUAL_ONLY"

    subnetwork {
        name = google_compute_subnetwork.vpc_private.id
        source_ip_ranges_to_nat = ["ALL_IP_RANGES"]
    }

    nat_ips = [google_compute_address.nat.self_link]

    depends_on = [
    google_compute_network.vpc_webapp
  ]
}

resource "google_compute_address" "nat" {
    name = "nat"
    address_type = "EXTERNAL"
    network_tier = "PREMIUM"
}